# Kenzan laptop specific .bashrc settings
# Should be sourced by .bashrc

PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"
PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
PATH="/usr/local/opt/node@10/bin:$PATH"

source "${code}/elspleth-charter/scripts/website-library.sh"

# TEMP

manysadpods() {
  local envs=(dev qa uat engprod)
  local namespaces=(cnet)
  for env in "${envs[@]}"; do
    for ns in "${namespaces[@]}"; do
      kubectx "portalsvpc-${env}-${ns}developer"
      sadpods
      echo
    done
  done
}

# End TEMP

function zuul_ssh() {
  echo -e "set -o vi; \n cd /usr/share/tomcat7/; \n sudo vi -R logs/catalina.out" | pbcopy
  ssh $@; clear
}

_kube_envs=($(kubectx))
for kube_env in "${_kube_envs[@]}"; do
  alias "${kube_env}=kubectx ${kube_env}"
done

# Incubating ideas for helper functions
alias both='jenkins docker 1 && jenkins puppet 1'
alias j='jenkins'

alias sources='bitbucket 1'
alias PR='bitbucket 2'
alias PRs='bitbucket 3'
alias prs='bitbucket 3'

alias release='"${code}"/spc-dev-toolbox/teams/innovation/release.sh'

# References
alias curl_notes='open ~/Documents/projects/charter/curl-to-end-all-curls.md'
alias cassandra_notes='open ~/Documents/projects/charter/efforts/cassandra/cassandra-notes.md'

# Node
alias node6='bash "${code}"/developer-machine-setup/developer_tools.bash node6'
alias node10='bash "${code}"/developer-machine-setup/developer_tools.bash node10'

# Current project - short lived
alias telepresence='telepresence --logfile /dev/null'

# Mac
alias json='pbpaste | jq | pbcopy'

# Places
alias az='cd ~/Documents/projects/training/azure-4-day-training'
alias notes='cd "${notes}"'
alias projects='cd ~/Documents/projects'
alias training='cd ~/Documents/projects/training'
alias charter='cd "${HOME}"/Documents/projects/charter'
alias ourlib='cd "${code}"/portals-jenkins-library'
alias theirlib='cd "${code}"/jenkins_shared_library'
alias dsl='cd "${code}"/jenkins-job-dsl'
alias tutorial='cd "${code}"/portals-onboarding-tutorial'
alias doc='cd "${code}"/spc-swagger-doc'
alias hosts='cd "${code}"/spc-dev-toolbox/hosts'
alias box='cd "${code}"/spc-dev-toolbox'
alias dp='cd "${code}"/docker-provisioning'
alias scripts='cd "${code}"/jenkins-pipeline-scripts'
alias codegen='cd "${code}"/spc-swagger-codegen'
alias gen='cd "${code}"/spc-swagger-codegen'
alias ticket='cd "$HOME/Documents/projects/charter/ticket"'

# Apps
alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
alias google='chrome'
alias grapher='(cd ~/Documents/tools/grapher && java -jar Fleye.jar 1> /dev/null 2>&1 &)'
alias fleye='grapher'

# Usage: java -jar decrypter.jar <path_to_pem_file> <key_to_decrypt>
alias decrypt="java -jar ~/Documents/tools/decrypter.jar"
alias jarscan="java -jar ~/Documents/tools/jarscan.jar"
alias splunk='chrome https://charter.splunkcloud.com'

# Clear IntelliJ 'ignored files' list that's created when deleting an Intellij Maven module
function restore_intellij_modules() {
  xmlstarlet ed -P -L -d '/project/component/option[@name="ignoredFiles"]' "${code}"/BlueTeam/.idea/misc.xml
}

# Early days at Kenzan
alias accounts="vi '${notes}/accounts.txt'"
alias todo="vi '${notes}/todo.txt'"
alias gather='"${code}"/elspleth/machines/scripts/gather-machine-rc.sh kenzan-laptop'

# Charter
alias forwardcreds='ssh-add -K /Users/curtisf/.ssh/charter_id_rsa &>/dev/null'
alias monday='"${code}"/elspleth-charter/jumpboxes/bastion/deploy-bastion-home.sh rekey'
alias exercisedockerprovisioning='"${code}"/elspleth-charter/scripts/exercise-docker-provisioning.sh'
alias exercisedockerprovisioningundo='"${code}"/elspleth-charter/scripts/exercise-docker-provisioning-undo.sh'
alias exercisedockerprovisioninglist='"${code}"/elspleth-charter/scripts/exercise-docker-provisioning-list.sh'
alias clean_remote_branches_jira='"${code}"/elspleth-charter/scripts/cleanup-remote-branches.sh'
alias pull_charter_container_config='"${code}"/elspleth-charter/scripts/pull-charter-container-config.sh'
alias run_config_aware_tomcat_container='"${code}"/elspleth-charter/scripts/run-config-aware-tomcat-container.sh'

# auto-complete
if [ -f $(brew --prefix)/etc/bash_completion ]; then
. $(brew --prefix)/etc/bash_completion
fi

function decrypter() {
  echo 'Looks like shared-lib-config grabs privateKey.pem from a S3 client :sadparrot:'
  echo 'Search all of Slack for `-u` to find a curl that has service account creds!'
  if [ $# -ne 2 ]; then echo "Usage: decrypter <key file> <encoded content file>"; return 1; fi
  base64 -D -i $2 | openssl rsautl -decrypt -inkey $1  -out result.tmp
  cat result.tmp
  rm result.tmp
}

function vpn() {
  local base=~/.anyconnect.vpn.
  local vpn_name="$1"
  local config="${base}${vpn_name}"
  if [ ! -f "${config}" ]; then echo "usage: vpn <vpn short name>";  echo "VPN config file not found: ${config}"; echo "Options are:"; ls "${base}"* | sed -E 's/.+\.([^.]+)/\1/g'; return 1; fi
  /opt/cisco/anyconnect/bin/vpn disconnect || :
  killall "Cisco AnyConnect Secure Mobility Client"
  sleep 2
  (echo -n "$(cat ~/.machine_secret)" | pbcopy) || true
  (cd "${code}/spc-dev-toolbox/hosts" && ./apply_hosts_file.sh "${vpn_name}-vpn-hosts")
  (echo -n "$(cat ~/.vpn.${vpn_name}.secret)" | pbcopy) || true
  cp "${config}" ~/.anyconnect
  open -a "Cisco AnyConnect Secure Mobility Client"
  # echo "Opening Charter VPN usage spreadsheet..."
  # open 'https://docs.google.com/spreadsheets/d/1kMdYYT7OedjSuj-9fokntYB5kvlBq6WnZjW2vJmtlJY/edit#gid=0'
}

# Clears annoying Iterm2 introduction
clear

