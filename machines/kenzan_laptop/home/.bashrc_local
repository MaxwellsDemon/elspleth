# Kenzan laptop specific .bashrc settings
# Should be sourced by .bashrc

PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"

source "${code}/elspleth-charter/scripts/website_library.sh"

# Node
alias node6='bash "${code}"/developer-machine-setup/developer_tools.bash node6'
alias node10='bash "${code}"/developer-machine-setup/developer_tools.bash node10'

# Current project - short lived
alias telepresence='telepresence --logfile /dev/null'

# Why not
alias cast='git add .; git commit -m "Intermediate commit for testing on Jenkins"; git push'

# Places
alias projects='cd ~/Documents/projects'
alias training='cd ~/Documents/projects/training'
alias blue='cd ~/Documents/projects/blue-team'
alias notes='cd "${notes}"'
alias canary='cd ~/Documents/projects/canary-team'

# Apps
alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
alias google='chrome'
alias grapher='(cd ~/Documents/tools/grapher && java -jar Fleye.jar 1> /dev/null 2>&1 &)'
alias fleye='grapher'

# Usage: java -jar decrypter.jar <path_to_pem_file> <key_to_decrypt>
alias decrypt="java -jar ~/Documents/tools/decrypter.jar"
alias jarscan="java -jar ~/Documents/tools/jarscan.jar"
alias splunk='chrome https://charter.splunkcloud.com'

# Clear IntelliJ 'ignored files' list that's created when deleting an Intellij Maven module
function restore_intellij_modules() {
	xmlstarlet ed -P -L -d '/project/component/option[@name="ignoredFiles"]' "${code}"/BlueTeam/.idea/misc.xml
}

# Early days at Kenzan
alias accounts="vi '${notes}/accounts.txt'"
alias todo="vi '${notes}/todo.txt'"
alias gather='"${code}"/elspleth/machines/scripts/gather_machine_rc.sh kenzan_laptop'

# Charter
alias exercisedockerprovisioning='"${code}"/elspleth-charter/scripts/exercise_docker_provisioning.sh'
alias exercisedockerprovisioningundo='"${code}"/elspleth-charter/scripts/exercise_docker_provisioning_undo.sh'
alias exercisedockerprovisioninglist='"${code}"/elspleth-charter/scripts/exercise_docker_provisioning_list.sh'
alias dp='cd "${code}"/docker-provisioning'
alias de='cd "${code}"/developer-environment'

# auto-complete
if [ -f $(brew --prefix)/etc/bash_completion ]; then
. $(brew --prefix)/etc/bash_completion
fi

function decrypter() {
	if [ $# -ne 2 ]; then echo "Usage: decrypter <key file> <encoded content file>"; return 1; fi
	base64 -D -i $2 | openssl rsautl -decrypt -inkey $1  -out result.tmp
	cat result.tmp
	rm result.tmp
}

function vpn() {
	local base=~/.anyconnect.vpn.
	local vpn_name="$1"
	local config="${base}${vpn_name}"
	if [ ! -f "${config}" ]; then echo "usage: vpn <vpn short name>";  echo "VPN config file not found: ${config}"; echo "Options are:"; ls "${base}"* | sed -E 's/.+\.([^.]+)/\1/g'; return 1; fi
	echo "Please disconnect from VPN, then continue..."
	read
	killall "Cisco AnyConnect Secure Mobility Client"
	sleep 2
	(cd "${code}/etc-hosts" && ./apply_latest.sh "${vpn_name}-vpn-hosts")
	cp "${config}" ~/.anyconnect
	open -a "Cisco AnyConnect Secure Mobility Client"
}

# Clears annoying Iterm2 introduction
clear

